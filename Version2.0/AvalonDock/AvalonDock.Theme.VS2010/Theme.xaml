<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:localThemes="clr-namespace:AvalonDock.Themes"
    xmlns:shell="clr-namespace:Microsoft.Windows.Shell;assembly=AvalonDock"
    xmlns:avalonDock="clr-namespace:AvalonDock;assembly=AvalonDock"
    xmlns:avalonDockLayout="clr-namespace:AvalonDock.Layout;assembly=AvalonDock"
    xmlns:avalonDockControls="clr-namespace:AvalonDock.Controls;assembly=AvalonDock"
    xmlns:avalonDockConverters="clr-namespace:AvalonDock.Converters;assembly=AvalonDock">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Brushes.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    <avalonDockConverters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
    <avalonDockConverters:InverseBoolToVisibilityConverter x:Key="InverseBoolToVisibilityConverter"/>
    <avalonDockConverters:AnchorSideToOrientationConverter x:Key="AnchorSideToOrientationConverter"/>
    <avalonDockConverters:AnchorSideToAngleConverter x:Key="AnchorSideToAngleConverter"/>
    <avalonDockConverters:NullToDoNothingConverter x:Key="NullToDoNothingConverter"/>
    
    <!--DocumentPaneControlStyle-->
    <Style x:Key="DocumentPaneControlStyle" TargetType="{x:Type avalonDockControls:LayoutDocumentPaneControl}">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Background" Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor33}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutDocumentPaneControl}">
                    <Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid  Panel.ZIndex="1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <avalonDockControls:DocumentPaneTabPanel x:Name="HeaderPanel" Grid.Column="0" IsItemsHost="true" Margin="2,2,2,0" Grid.Row="0" KeyboardNavigation.TabIndex="1"/>
                            <avalonDockControls:DropDownButton
                                x:Name="MenuDropDownButton"
                                Style="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}"
                                Focusable="False"
                                Grid.Column="1">
                                <avalonDockControls:DropDownButton.DropDownContextMenu>
                                    <avalonDockControls:ContextMenuEx
                                        ItemsSource="{Binding Model.ChildrenSorted, RelativeSource={RelativeSource TemplatedParent}}">
                                        <avalonDockControls:ContextMenuEx.ItemContainerStyle>
                                            <Style TargetType="{x:Type avalonDockControls:MenuItemEx}">
                                                <Setter Property="HeaderTemplate" Value="{Binding Path=Root.Manager.DocumentPaneMenuItemHeaderTemplate}"/>
                                                <Setter Property="HeaderTemplateSelector" Value="{Binding Path=Root.Manager.DocumentPaneMenuItemHeaderTemplateSelector}"/>
                                                <Setter Property="IconTemplate" Value="{Binding Path=Root.Manager.IconContentTemplate}"/>
                                                <Setter Property="IconTemplateSelector" Value="{Binding Path=Root.Manager.IconContentTemplateSelector}"/>
                                                <Setter Property="Command" Value="{Binding Path=Root.Manager.ActivateCommand}"/>
                                                <Setter Property="CommandParameter" Value="{Binding}"/>
                                            </Style>
                                        </avalonDockControls:ContextMenuEx.ItemContainerStyle>
                                    </avalonDockControls:ContextMenuEx>
                                </avalonDockControls:DropDownButton.DropDownContextMenu>
                                <Image Source="/AvalonDock;component/Images/PinDocMenu.png"/>
                            </avalonDockControls:DropDownButton>
                        </Grid>
                        <Border x:Name="ContentPanel" 
                                VerticalAlignment="Stretch" 
                                HorizontalAlignment="Stretch"  
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                Grid.Column="0"
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                Grid.Row="1" 
                                KeyboardNavigation.TabIndex="2" 
                                KeyboardNavigation.TabNavigation="Local"
                                CornerRadius="3"
                                Padding="0,3,0,3">
                            <ContentPresenter x:Name="PART_SelectedContentHost" 
                                              ContentSource="SelectedContent" 
                                              Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SelectedContent.IsActive}" Value="True"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SelectedContent.IsLastFocusedDocument}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background"
									        Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor31}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SelectedContent.IsActive}" Value="False"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SelectedContent.IsLastFocusedDocument}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Background"
									        Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor30}" />
                        </MultiDataTrigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Model.ChildrenCount}" Value="0">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="MenuDropDownButton" />
                        </DataTrigger>                        
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type TabItem}">
                    <Setter Property="Foreground" Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor10}"/>                   
                    <Setter Property="Background" Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor4}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor4}"/>
                    <Setter Property="ContextMenu" Value="{Binding Path=Root.Manager.DocumentContextMenu}"/>
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                    <Setter Property="Padding" Value="2,0,2,0"/>
                    <Setter Property="Margin" Value="2,0,2,0"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabItem}">
                                <Grid SnapsToDevicePixels="true">
                                    <Border x:Name="Bd" 
							              BorderBrush="{TemplateBinding BorderBrush}"
   				                          BorderThickness="1,1,1,0" 
                                          CornerRadius="2,2,0,0"
							              Background="{TemplateBinding Background}" 
							              Padding="{TemplateBinding Padding}">
                                        <ContentPresenter 
								            x:Name="Content" 
								            ContentSource="Header" 
                                            HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" 
                                            VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                            RecognizesAccessKey="True" 
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Border>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Selector.IsSelected"
								            Value="true">
                                        <Setter Property="BorderBrush"
									        Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor33}" />
                                        <Setter Property="Background"
									        Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor16}" />
                                        <Setter Property="Foreground"
									        Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor2}"/>
                                        <Setter Property="Panel.ZIndex" 
                                            Value="1" />
                                        <Setter Property="Margin" Value="-1,0,-1,-4"/>
                                        <Setter Property="Margin" TargetName="Content" Value="0,0,0,3"/>
                                    </Trigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsActive}" Value="True"/>
                                            <Condition Binding="{Binding IsLastFocusedDocument}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="BorderBrush"
									        Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor31}" />
                                        <Setter Property="Background"
									        Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor25}" />
                                        <Setter Property="Foreground"
									        Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor3}"/>
                                        <Setter Property="Panel.ZIndex" 
                                            Value="1" />
                                    </MultiDataTrigger>

                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsActive}" Value="False"/>
                                            <Condition Binding="{Binding IsLastFocusedDocument}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="BorderBrush"
									        Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor30}" />
                                        <Setter Property="Background"
									        Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor24}" />
                                        <Setter Property="Foreground"
									        Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor3}"/>
                                        <Setter Property="Panel.ZIndex" 
                                            Value="1" />
                                    </MultiDataTrigger>

                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="true"/>
                                            <Condition Property="Selector.IsSelected" Value="false"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="BorderBrush" Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor14}"/>
                                        <Setter Property="Background" Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor6}"/>
                                        <Setter Property="Panel.ZIndex" Value="0" />
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="BorderBrush" Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor13}"/>
                                        <Setter Property="Background" Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor9}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <avalonDockControls:LayoutDocumentTabItem Model="{Binding}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <avalonDockControls:LayoutDocumentControl Model="{Binding}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--AnchorablePaneControlStyle-->
    <Style x:Key="AnchorablePaneControlStyle" TargetType="{x:Type avalonDockControls:LayoutAnchorablePaneControl}">
        <Setter Property="TabStripPlacement" Value="Bottom"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Background" Value="{x:Null}"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutAnchorablePaneControl}">
                    <Grid ClipToBounds="true" SnapsToDevicePixels="true" KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Border x:Name="ContentPanel" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" 
                                Grid.Column="0" 
                                KeyboardNavigation.DirectionalNavigation="Contained"
                                Grid.Row="0" KeyboardNavigation.TabIndex="2" 
                                KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter x:Name="PART_SelectedContentHost"
                                              ContentSource="SelectedContent" 
                                              Margin="{TemplateBinding Padding}"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <avalonDockControls:AnchorablePaneTabPanel x:Name="HeaderPanel" Margin="2,0,2,2" IsItemsHost="true" Grid.Row="1" KeyboardNavigation.TabIndex="1" Panel.ZIndex="1"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type TabItem}">
                    <Setter Property="Background" Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor4}"/>
                    <Setter Property="BorderBrush" Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor4}"/>
                    <Setter Property="ContextMenu" Value="{Binding Path=Root.Manager.AnchorableContextMenu}"/>
                    <Setter Property="Foreground" Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor2}"/>
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TabItem}">
                                <Grid SnapsToDevicePixels="true">
                                    <Border x:Name="Bd" 
							              BorderBrush="{TemplateBinding BorderBrush}"
   				                          BorderThickness="1,0,1,1" 
                                          CornerRadius="0,0,2,2"
							              Background="{TemplateBinding Background}" 
							              Padding="{TemplateBinding Padding}">
                                        <ContentPresenter 
								            x:Name="Content" 
								            ContentSource="Header" 
                                            HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" 
                                            VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                            RecognizesAccessKey="True" 
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Border>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="Selector.IsSelected"
								        Value="true">
                                            <Setter Property="BorderBrush"
									    Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor8}" />
                                            <Setter Property="Background"
									    Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor10}" />
                                            <Setter Property="Foreground"
									    Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor3}"/>
                                            <Setter Property="Panel.ZIndex" 
                                        Value="1" />
                                        <Setter Property="Margin" Value="-1,-2,-1,0"/>
                                        <Setter Property="Margin" TargetName="Content" Value="0,1,0,0"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsMouseOver" Value="true"/>
                                            <Condition Property="Selector.IsSelected" Value="false"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="BorderBrush" Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor14}"/>
                                        <Setter Property="Background" Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor6}"/>
                                        <Setter Property="Panel.ZIndex" Value="0" />
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="BorderBrush" Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor13}"/>
                                        <Setter Property="Background" Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor9}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabControl}}, Path=Items.Count}" Value="1">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <avalonDockControls:LayoutAnchorableTabItem Model="{Binding}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <avalonDockControls:LayoutAnchorableControl Model="{Binding}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="avalonDockControls:AnchorablePaneTitle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3,3,0,0">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter 
                                Margin="2,0,0,0"
                                Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}" 
                                ContentTemplate="{Binding Model.Root.Manager.AnchorableTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                ContentTemplateSelector="{Binding Model.Root.Manager.AnchorableTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"/>

                            <avalonDockControls:DropDownButton
                                Style="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}"
                                Focusable="False"
                                Grid.Column="1"
                                DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                DropDownContextMenuDataContext="{Binding Path=Model, RelativeSource={RelativeSource TemplatedParent}}">
                                <Image Source="/AvalonDock;component/Images/PinMenu.png"/>
                            </avalonDockControls:DropDownButton>

                            <Button x:Name="PART_AutoHidePin" 
                                Grid.Column="2" 
                                Focusable="False"
                                Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                Command="{Binding Path=Model.Root.Manager.AnchorableAutoHideCommand, RelativeSource={RelativeSource TemplatedParent}}" 
                                CommandParameter="{Binding Path=Model, RelativeSource={RelativeSource TemplatedParent}}">
                                <Image Source="/AvalonDock;component/Images/PinAutoHide.png"/>
                            </Button>
                            <Button x:Name="PART_HidePin" 
                                Grid.Column="3" 
                                Focusable="False"
                                Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                Command="{Binding Path=Model.Root.Manager.AnchorableHideCommand, RelativeSource={RelativeSource TemplatedParent}}" 
                                CommandParameter="{Binding Path=Model, RelativeSource={RelativeSource TemplatedParent}}" >
                                <Image Source="/AvalonDock;component/Images/PinClose.png"/>
                            </Button>

                            <avalonDockControls:DropDownControlArea 
                                Grid.Column="0"
                                DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                DropDownContextMenuDataContext="{Binding Path=Model, RelativeSource={RelativeSource TemplatedParent}}"/>

                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="AnchorSideTemplate" TargetType="{x:Type avalonDockControls:LayoutAnchorSideControl}">
        <ItemsControl ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Children}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel 
                        MinWidth="4"
                        MinHeight="4"
                        Orientation="{Binding Path=Model.Side, RelativeSource={RelativeSource AncestorType={x:Type avalonDockControls:LayoutAnchorSideControl}, Mode=FindAncestor}, Converter={StaticResource AnchorSideToOrientationConverter}}"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
    </ControlTemplate>

    <ControlTemplate x:Key="AnchorGroupTemplate" TargetType="{x:Type avalonDockControls:LayoutAnchorGroupControl}">
        <ItemsControl ItemsSource="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Children}">
            <ItemsControl.LayoutTransform>
                <RotateTransform Angle="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Model.Parent.Side, Converter={StaticResource AnchorSideToAngleConverter}}"/>
            </ItemsControl.LayoutTransform>
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
    </ControlTemplate>

    <ControlTemplate x:Key="AnchorTemplate" TargetType="{x:Type avalonDockControls:LayoutAnchorControl}">
        <Border 
            x:Name="Bd"
            Background="{DynamicResource AvalonDock_ThemeVS2010_BaseColor16}"
            BorderThickness="1"
            CornerRadius="3,3,0,0"
            Margin="2" 
            Padding="2">
                <ContentPresenter 
                Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}" 
                ContentTemplate="{Binding AnchorableHeaderTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"
                ContentTemplateSelector="{Binding AnchorableHeaderTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"/>
        </Border>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.Parent.Parent.Side}" Value="Right">
                <Setter Property="CornerRadius" Value="0,0,3,3" TargetName="Bd"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.Parent.Parent.Side}" Value="Bottom">
                <Setter Property="CornerRadius" Value="3,3,0,0" TargetName="Bd"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.Parent.Parent.Side}" Value="Top">
                <Setter Property="CornerRadius" Value="0,0,3,3" TargetName="Bd"/>
            </DataTrigger>            
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="true"/>
                    <Condition Property="Selector.IsSelected" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="BorderBrush" Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor14}" TargetName="Bd"/>
                <Setter Property="Background" Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor6}" TargetName="Bd"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="{x:Type avalonDockControls:OverlayWindow}" TargetType="{x:Type avalonDockControls:OverlayWindow}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:OverlayWindow}">
                    <Canvas x:Name="PART_DropTargetsContainer" Opacity="0.9">
                        <Path x:Name="PART_PreviewBox" Fill="AliceBlue" StrokeThickness="2" Stroke="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                        <Grid x:Name="PART_DockingManagerDropTargets" >
                            <Image x:Name="PART_DockingManagerDropTargetLeft" VerticalAlignment="Center" HorizontalAlignment="Left" Source="/AvalonDock.Themes.VS2010;component/Images/DockAnchorableLeft.PNG" Stretch="None" />
                            <Image x:Name="PART_DockingManagerDropTargetRight" VerticalAlignment="Center" HorizontalAlignment="Right" Source="/AvalonDock.Themes.VS2010;component/Images/DockAnchorableRight.PNG" Stretch="None" />
                            <Image x:Name="PART_DockingManagerDropTargetBottom" VerticalAlignment="Bottom" HorizontalAlignment="Center" Source="/AvalonDock.Themes.VS2010;component/Images/DockAnchorableBottom.PNG" Stretch="None" />
                            <Image x:Name="PART_DockingManagerDropTargetTop" VerticalAlignment="Top" HorizontalAlignment="Center" Source="/AvalonDock.Themes.VS2010;component/Images/DockAnchorableTop.PNG" Stretch="None"/>
                        </Grid>
                        <Grid x:Name="PART_AnchorablePaneDropTargets">
                            <Grid Width="112" Height="112" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Image Grid.ColumnSpan="3" Grid.RowSpan="3" Source="/AvalonDock.Themes.VS2010;component/Images/DockPaneEmpty.png" Stretch="None" Margin="0,0.5,0,-0.5"/>
                                <Border Name="PART_AnchorablePaneDropTargetTop" Grid.Column="1" Grid.Row="0" Margin="0,3.5,0, 0">
                                    <Image Source="/AvalonDock.Themes.VS2010;component/Images/DockDocumentAsAnchorableTop.png"  Stretch="None" />
                                </Border>
                                <Border Name="PART_AnchorablePaneDropTargetRight" Grid.Column="2" Grid.Row="1" Margin="2">
                                    <Image Source="/AvalonDock.Themes.VS2010;component/Images/DockDocumentAsAnchorableRight.png"  Stretch="None"/>
                                </Border>
                                <Border Name="PART_AnchorablePaneDropTargetBottom" Grid.Column="1" Grid.Row="2" Margin="0,-0.5,0,0">
                                    <Image Source="/AvalonDock.Themes.VS2010;component/Images/DockDocumentAsAnchorableBottom.png"  Stretch="None"/>
                                </Border>
                                <Border Name="PART_AnchorablePaneDropTargetLeft" Grid.Column="0" Grid.Row="1" Margin="2">
                                    <Image Source="/AvalonDock.Themes.VS2010;component/Images/DockDocumentAsAnchorableLeft.png"  Stretch="None"/>
                                </Border>
                                <Border Name="PART_AnchorablePaneDropTargetInto" Grid.Column="1" Grid.Row="1" Margin="0,0.5,0,0">
                                    <Image Source="/AvalonDock.Themes.VS2010;component/Images/DockDocumentInside.png"  Stretch="None"/>
                                </Border>
                            </Grid>
                        </Grid>
                        <Grid x:Name="PART_DocumentPaneDropTargets">
                            <Grid Width="112" Height="112" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Image Grid.ColumnSpan="3" Grid.RowSpan="3" Source="/AvalonDock.Themes.VS2010;component/Images/DockPaneEmpty.PNG"  Stretch="None"/>
                                <Border Name="PART_DocumentPaneDropTargetTop" Grid.Column="1" Grid.Row="0" Margin="2">
                                    <Image Source="/AvalonDock.Themes.VS2010;component/Images/DockDocumentTop.png"  Stretch="None"/>
                                </Border>
                                <Border Name="PART_DocumentPaneDropTargetRight" Grid.Column="2" Grid.Row="1" Margin="2">
                                    <Image Source="/AvalonDock.Themes.VS2010;component/Images/DockDocumentRight.png"  Stretch="None"/>
                                </Border>
                                <Border Name="PART_DocumentPaneDropTargetBottom" Grid.Column="1" Grid.Row="2" Margin="2">
                                    <Image Source="/AvalonDock.Themes.VS2010;component/Images/DockDocumentBottom.png"  Stretch="None"/>
                                </Border>
                                <Border Name="PART_DocumentPaneDropTargetLeft" Grid.Column="0" Grid.Row="1" Margin="2">
                                    <Image Source="/AvalonDock.Themes.VS2010;component/Images/DockDocumentLeft.png"  Stretch="None"/>
                                </Border>
                                <Border Name="PART_DocumentPaneDropTargetInto" Grid.Column="1" Grid.Row="1">
                                    <Image Source="/AvalonDock.Themes.VS2010;component/Images/DockDocumentInside.png"  Stretch="None"/>
                                </Border>
                            </Grid>
                        </Grid>

                        <Grid x:Name="PART_DocumentPaneFullDropTargets">
                            <Grid Width="184" Height="184" VerticalAlignment="Center" HorizontalAlignment="Center">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Image Grid.ColumnSpan="5" Grid.RowSpan="5" Source="/AvalonDock.Themes.VS2010;component/Images/DockPaneLargeEmpty.PNG"  Stretch="None"/>
                                <Border Name="PART_DocumentPaneFullDropTargetTop" Grid.Column="2" Grid.Row="1">
                                    <Image Source="/AvalonDock.Themes.VS2010;component/Images/DockDocumentTop.png"  Stretch="None" Margin="2"/>
                                </Border>
                                <Border Name="PART_DocumentPaneFullDropTargetRight" Grid.Column="3" Grid.Row="2">
                                    <Image Source="/AvalonDock.Themes.VS2010;component/Images/DockDocumentRight.png"  Stretch="None" Margin="2"/>
                                </Border>
                                <Border Name="PART_DocumentPaneFullDropTargetBottom" Grid.Column="2" Grid.Row="3">
                                    <Image Source="/AvalonDock.Themes.VS2010;component/Images/DockDocumentBottom.png"  Stretch="None" Margin="2"/>
                                </Border>
                                <Border Name="PART_DocumentPaneFullDropTargetLeft" Grid.Column="1" Grid.Row="2">
                                    <Image Source="/AvalonDock.Themes.VS2010;component/Images/DockDocumentLeft.png"  Stretch="None" Margin="2"/>
                                </Border>
                                <Border Name="PART_DocumentPaneFullDropTargetInto" Grid.Column="2" Grid.Row="2">
                                    <Image Source="/AvalonDock.Themes.VS2010;component/Images/DockDocumentInside.png"  Stretch="None"/>
                                </Border>

                                <Border Name="PART_DocumentPaneDropTargetTopAsAnchorablePane" Grid.Column="2" Grid.Row="0">
                                    <Image Source="/AvalonDock.Themes.VS2010;component/Images/DockDocumentAsAnchorableTop.png"  Stretch="None" Margin="2"/>
                                </Border>
                                <Border Name="PART_DocumentPaneDropTargetRightAsAnchorablePane" Grid.Column="4" Grid.Row="2">
                                    <Image Source="/AvalonDock.Themes.VS2010;component/Images/DockDocumentAsAnchorableRight.png"  Stretch="None" Margin="2"/>
                                </Border>
                                <Border Name="PART_DocumentPaneDropTargetBottomAsAnchorablePane" Grid.Column="2" Grid.Row="4">
                                    <Image Source="/AvalonDock.Themes.VS2010;component/Images/DockDocumentAsAnchorableBottom.png"  Stretch="None" Margin="2"/>
                                </Border>
                                <Border Name="PART_DocumentPaneDropTargetLeftAsAnchorablePane" Grid.Column="0" Grid.Row="2">
                                    <Image Source="/AvalonDock.Themes.VS2010;component/Images/DockDocumentAsAnchorableLeft.png"  Stretch="None" Margin="2"/>
                                </Border>

                            </Grid>
                        </Grid>

                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="DocumentHeaderTemplate">
        <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis"/>
    </DataTemplate>

    <DataTemplate x:Key="AnchorableHeaderTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Image x:Name="icon" Source="{Binding IconSource, Converter={StaticResource NullToDoNothingConverter}}" Stretch="Uniform"/>
            <TextBlock x:Name="title" Margin="4,0,0,0" Text="{Binding Title}" TextTrimming="CharacterEllipsis" Grid.Column="1"/>
        </Grid>
        <DataTemplate.Triggers>
            <DataTrigger Binding="{Binding IconSource}" Value="{x:Null}">
                <Setter Property="Margin" Value="0" TargetName="title"/>
            </DataTrigger>
        </DataTemplate.Triggers>
    </DataTemplate>

    <DataTemplate x:Key="DocumentTitleTemplate">
        <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis"/>
    </DataTemplate>

    <DataTemplate x:Key="AnchorableTitleTemplate">
        <TextBlock Text="{Binding Title}" TextTrimming="CharacterEllipsis" />
    </DataTemplate>

    <DataTemplate x:Key="IconContentTemplate">
        <Image Source="{Binding IconSource, Converter={StaticResource NullToDoNothingConverter}}" Stretch="Uniform"/>
    </DataTemplate>

    <ContextMenu x:Key="AnchorableContextMenu">
        <MenuItem Header="Float" 
                Command="{Binding Path=Root.Manager.AnchorableFloatCommand}"
                CommandParameter="{Binding}"/>
        <MenuItem Header="Dock" 
                Command="{Binding Path=Root.Manager.AnchorableDockCommand}"
                CommandParameter="{Binding}"/>
        <MenuItem Header="Dock as Tabbed Document" 
                Command="{Binding Path=Root.Manager.AnchorableDockAsDocumentCommand}"
                CommandParameter="{Binding}"/>
        <MenuItem Header="Auto Hide" 
                Command="{Binding Path=Root.Manager.AnchorableAutoHideCommand}"
                CommandParameter="{Binding}"/>
        <MenuItem Header="Close" 
                Command="{Binding Path=Root.Manager.AnchorableCloseCommand}"
                CommandParameter="{Binding}"/>
    </ContextMenu>

    <ContextMenu x:Key="DocumentContextMenu">
        <MenuItem Header="Close" 
                Command="{Binding Path=Root.Manager.DocumentCloseCommand}"
                CommandParameter="{Binding}"/>
        <MenuItem Header="Close All But This" 
                Command="{Binding Path=Root.Manager.DocumentCloseAllButThisCommand}"
                CommandParameter="{Binding}"/>
    </ContextMenu>

    <!--DockingManager-->
    <Style x:Key="{x:Type avalonDock:DockingManager}" TargetType="{x:Type avalonDock:DockingManager}">
        <Setter Property="Background" Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor1}"/>
        <Setter Property="Foreground" Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor2}"/>
        <Setter Property="DocumentPaneControlStyle" Value="{StaticResource DocumentPaneControlStyle}"/>
        <Setter Property="AnchorablePaneControlStyle" Value="{StaticResource AnchorablePaneControlStyle}"/>
        <Setter Property="AnchorSideTemplate" Value="{StaticResource AnchorSideTemplate}"/>
        <Setter Property="AnchorGroupTemplate" Value="{StaticResource AnchorGroupTemplate}"/>
        <Setter Property="AnchorTemplate" Value="{StaticResource AnchorTemplate}"/>
        <Setter Property="DocumentHeaderTemplate" Value="{StaticResource DocumentHeaderTemplate}"/>
        <Setter Property="AnchorableHeaderTemplate" Value="{StaticResource AnchorableHeaderTemplate}"/>
        <Setter Property="DocumentTitleTemplate" Value="{StaticResource DocumentTitleTemplate}"/>
        <Setter Property="AnchorableTitleTemplate" Value="{StaticResource AnchorableTitleTemplate}"/>
        <Setter Property="AnchorableContextMenu" Value="{StaticResource AnchorableContextMenu}"/>
        <Setter Property="DocumentContextMenu" Value="{StaticResource DocumentContextMenu}"/>
        <Setter Property="DocumentPaneMenuItemHeaderTemplate" Value="{StaticResource DocumentHeaderTemplate}"/>
        <Setter Property="IconContentTemplate" Value="{StaticResource IconContentTemplate}"/>
        <Setter Property="GridSplitterWidth" Value="4"/>
        <Setter Property="GridSplitterHeight" Value="4"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDock:DockingManager}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter Content="{TemplateBinding LayoutRootPanel}" Grid.Column="1" Grid.Row="1"/>
                            <ContentPresenter Content="{TemplateBinding RightSidePanel}" Grid.Column="2" Grid.Row="1"/>
                            <ContentPresenter Content="{TemplateBinding LeftSidePanel}" Grid.Column="0" Grid.Row="1"/>
                            <ContentPresenter Content="{TemplateBinding TopSidePanel}" Grid.Column="1" Grid.Row="0"/>
                            <ContentPresenter Content="{TemplateBinding BottomSidePanel}" Grid.Column="1" Grid.Row="2"/>
                            <ContentPresenter 
                                x:Name="PART_AutoHideArea"
                                Content="{TemplateBinding AutoHideWindow}"
                                VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                Grid.Column="1" Grid.Row="1"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--LayoutGridResizerControl-->
    <Style x:Key="{x:Type avalonDockControls:LayoutGridResizerControl}" TargetType="{x:Type avalonDockControls:LayoutGridResizerControl}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutGridResizerControl}">
                    <Border Background="{TemplateBinding Background}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type avalonDockControls:LayoutDocumentControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutDocumentControl}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter Content="{Binding Model.Content, RelativeSource={RelativeSource TemplatedParent}}" 
                                          ContentTemplate="{Binding DocumentTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"
                                          ContentTemplateSelector="{Binding DocumentTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type avalonDockControls:LayoutDocumentTabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutDocumentTabItem}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Border Grid.ColumnSpan="2" Background="Transparent"/>
                            <ContentPresenter Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}" 
                                              ContentTemplate="{Binding DocumentHeaderTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"
                                              ContentTemplateSelector="{Binding DocumentHeaderTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"/>
                            <!-- Close button should be moved out to the container style -->
                            <Button x:Name="DocumentCloseButton" Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" Grid.Column="1" Margin="5,0,0,0" Visibility="Hidden" 
                                    Command="{Binding DocumentCloseCommand, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"
                                    CommandParameter="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}">
                                <Image Source="/AvalonDock;component/Images/PinClose.png"/>
                            </Button>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=IsSelected}" Value="true">
                            <Setter Property="Visibility" Value="Visible" TargetName="DocumentCloseButton"  />
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Visibility" Value="Visible" TargetName="DocumentCloseButton"  />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type avalonDockControls:LayoutAnchorableTabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutAnchorableTabItem}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <ContentPresenter Content="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}" 
                                          ContentTemplate="{Binding AnchorableHeaderTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"
                                          ContentTemplateSelector="{Binding AnchorableHeaderTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type avalonDockControls:LayoutAnchorableControl}">
        <Setter Property="Foreground" Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor2}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutAnchorableControl}">
                    <Border 
                        x:Name="Bd"
                        Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="3,3,0,0">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <Border x:Name="Header"
                                Background="{DynamicResource AvalonDock_ThemeVS2010_BaseColor16}">
                                <avalonDockControls:AnchorablePaneTitle 
                                    Model="{Binding Model, RelativeSource={RelativeSource TemplatedParent}}"
                                    Foreground="{TemplateBinding Foreground}"/>
                            </Border>
                            <ContentPresenter 
                                Content="{Binding Model.Content, RelativeSource={RelativeSource TemplatedParent}}" 
                                ContentTemplate="{Binding AnchorableTemplate, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"
                                ContentTemplateSelector="{Binding AnchorableTemplateSelector, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type avalonDock:DockingManager}, Mode=FindAncestor}}"
                                Grid.Row="1"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.IsActive}" Value="True">
                            <Setter Property="Background" Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor15}" TargetName="Header"/>
                            <Setter Property="Foreground" Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor3}"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.Parent.IsDirectlyHostedInFloatingWindow}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="Header"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type avalonDockControls:LayoutDocumentFloatingWindowControl}" TargetType="{x:Type avalonDockControls:LayoutDocumentFloatingWindowControl}">
        <Setter Property="Foreground" Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor10}"/>
        <Setter Property="Background" Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor33}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor33}"/>
        <Setter Property="shell:WindowChrome.WindowChrome">
            <Setter.Value>
                <shell:WindowChrome
                    ResizeBorderThickness="3"
                    CaptionHeight="18"
                    CornerRadius="3"
                    GlassFrameThickness="0"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutDocumentFloatingWindowControl}">
                    <Grid>
                        <Border x:Name="WindowBorder" 
                                BorderThickness="1" 
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}">
                            <Grid Margin="3">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="18"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Border x:Name="Header"
                                        Padding="2,0,2,0">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>
                                        <ContentPresenter Content="{Binding Model.RootDocument, RelativeSource={RelativeSource TemplatedParent}}" 
                                                  ContentTemplate="{Binding Model.Root.Manager.DocumentTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                                  ContentTemplateSelector="{Binding Model.Root.Manager.DocumentTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"/>


                                        <Button shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                            Focusable="False"
                                            Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolToVisibilityConverter}}"
                                            Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                            Command="{x:Static shell:SystemCommands.MaximizeWindowCommand}"
                                            CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                            Grid.Column="2">
                                            <Image Source="/AvalonDock;component/Images/PinMaximize.png"/>
                                        </Button>

                                        <Button shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                            Focusable="False"
                                            Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}"
                                            Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                            Command="{x:Static shell:SystemCommands.RestoreWindowCommand}"
                                            CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                            Grid.Column="2">
                                            <Image Source="/AvalonDock;component/Images/PinRestore.png"/>
                                        </Button>

                                        <Button shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                                Focusable="False"
                                                Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                                Command="{Binding Path=Model.Root.Manager.DocumentCloseCommand, RelativeSource={RelativeSource TemplatedParent}}"
                                                CommandParameter="{Binding Path=Model.RootDocument, RelativeSource={RelativeSource TemplatedParent}}"
                                                Grid.Column="3">
                                            <Image Source="/AvalonDock;component/Images/PinClose.png"/>
                                        </Button>
                                    </Grid>
                                </Border>
                                <ContentPresenter Content="{TemplateBinding Content}" Grid.Row="1"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.RootDocument.IsActive}" Value="True"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.RootDocument.IsLastFocusedDocument}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderBrush"
									        Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor31}" />
                            <Setter Property="Background"
									        Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor31}" />
                            <Setter Property="Background"
									        Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor25}" TargetName="Header" />
                            <Setter Property="Foreground"
									        Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor3}"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.RootDocument.IsActive}" Value="False"/>
                                <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.RootDocument.IsLastFocusedDocument}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderBrush"
									        Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor30}" />
                            <Setter Property="Background"
									        Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor30}" />
                            <Setter Property="Background"
									        Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor24}" TargetName="Header" />
                            <Setter Property="Foreground"
									        Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor3}"/>
                        </MultiDataTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
                
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type avalonDockControls:LayoutAnchorableFloatingWindowControl}" TargetType="{x:Type avalonDockControls:LayoutAnchorableFloatingWindowControl}">
        <Setter Property="Foreground" Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor2}"/>
        <Setter Property="Background" Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor1}"/>
        <Setter Property="shell:WindowChrome.WindowChrome">
            <Setter.Value>
                <shell:WindowChrome
                    ResizeBorderThickness="3"
                    CaptionHeight="18"
                    CornerRadius="3"
                    GlassFrameThickness="0"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type avalonDockControls:LayoutAnchorableFloatingWindowControl}">
                    <Grid>
                        <Border x:Name="WindowBorder" 
                                BorderThickness="3"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{DynamicResource AvalonDock_ThemeVS2010_BaseColor16}">
                            <Grid Margin="3">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="18"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Border x:Name="Header" 
                                        CornerRadius="3,3,0,0"
                                        Padding="2,0,2,0"
                                        Background="{DynamicResource AvalonDock_ThemeVS2010_BaseColor16}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="Auto"/>
                                        </Grid.ColumnDefinitions>

                                        <ContentPresenter Content="{Binding Model.SinglePane.SelectedContent, RelativeSource={RelativeSource TemplatedParent}}" 
                                                  ContentTemplate="{Binding Model.Root.Manager.AnchorableTitleTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                                  ContentTemplateSelector="{Binding Model.Root.Manager.AnchorableTitleTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"/>

                                        <avalonDockControls:DropDownButton
                                            x:Name="SinglePaneContextMenu"
                                            shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                            Visibility="{Binding Path=Model.IsSinglePane, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}"
                                            Style="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}"
                                            Focusable="False"
                                            Grid.Column="1"
                                            DropDownContextMenu="{Binding Model.Root.Manager.AnchorableContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                            DropDownContextMenuDataContext="{Binding Path=Model.SinglePane, RelativeSource={RelativeSource TemplatedParent}}">
                                            <Image Source="/AvalonDock;component/Images/PinMenu.png"/>
                                        </avalonDockControls:DropDownButton>

                                        <Button 
                                            shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                            Focusable="False"
                                            Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolToVisibilityConverter}}"
                                            Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                            Command="{x:Static shell:SystemCommands.MaximizeWindowCommand}"
                                            CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                            Grid.Column="2">
                                            <Image Source="/AvalonDock;component/Images/PinMaximize.png"/>
                                        </Button>

                                        <Button 
                                            shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                            Focusable="False"
                                            Visibility="{Binding IsMaximized, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}"
                                            Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                            Command="{x:Static shell:SystemCommands.RestoreWindowCommand}"
                                            CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                            Grid.Column="2">
                                            <Image Source="/AvalonDock;component/Images/PinRestore.png"/>
                                        </Button>

                                        <Button 
                                            shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                            Focusable="False"
                                            Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                                            Command="{x:Static shell:SystemCommands.CloseWindowCommand}"
                                            CommandParameter="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                            Grid.Column="3">
                                            <Image Source="/AvalonDock;component/Images/PinClose.png"/>
                                        </Button>
                                    </Grid>
                                </Border>
                                <ContentPresenter
                                    Content="{TemplateBinding Content}" Grid.Row="1"/>
                            </Grid>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=Model.SinglePane.SelectedContent.IsActive}" Value="True">
                            <Setter Property="Background" Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor15}" TargetName="Header"/>
                            <Setter Property="Foreground" Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor3}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type avalonDockControls:LayoutAutoHideWindowControl}" TargetType="{x:Type avalonDockControls:LayoutAutoHideWindowControl}">
        <Setter Property="Background" Value="{DynamicResource AvalonDock_ThemeVS2010_BaseColor1}"/>
        
    </Style>

</ResourceDictionary>
